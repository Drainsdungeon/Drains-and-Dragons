to back up your local database cd to the application root and run:
 mongodump -h 127.0.0.1:3001 -d meteor -o data/mongodb-backup

to restore, run:
mongorestore --port 3001 data/mongodb-backup/meteor

######################################################################


To query for points near a geo location:
from the meteor project directory enter: meteor mongo
 on the mongodb command line enter something like: 

db.pits.ensureIndex({ "geometry": "2dsphere" })

 db.pits.find(
   { geometry :
       { $near :
          {
            $geometry : {
               type : "Point" ,
               coordinates : [147.276568, -42.831024] },
            $maxDistance : 10
          }
       }
    }
)

######################################################################


when creating new collections from kmz files
use http://ogre.adc4gis.com/
set the source srs to CRS:84
and the target srs to WGS84
be prepared to do a lot of masaging of html riddled data

######################################################################

to upload to the meteor.com server:

type:
meteor mongo --url drains-and-dungeons.meteor.com

you will get something back that looks like
mongodb://client-c13e8730:ce1ba416-82e7-3ac5-59b4-e3756c96415a@production-db-c2.meteor.io:27017/drains-and-dungeons_meteor_com

copy out the bits and make a command like:
mongorestore -u client-c13e8730 -p ce1ba416-82e7-3ac5-59b4-e3756c96415a -h production-db-c2.meteor.io:27017 -db drains-and-dungeons_meteor_com data/mongodb-backup/meteor/